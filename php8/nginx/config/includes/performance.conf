# This tells Nginx to cache open file handles, "not found" errors, metadata about files and their permissions, etc.
#
# The upside of this is that Nginx can immediately begin sending data when a popular file is requested,
# and will also know to immediately send a 404 if a file is missing on disk, and so on.
#
# However, it also means that the server won't react immediately to changes on disk, which may be undesirable.
#
# In the below configuration, inactive files are released from the cache after 20 seconds, whereas
# active (recently requested) files are re-validated every 30 seconds.
#
# Descriptors will not be cached unless they are used at least 2 times within 20 seconds (the inactive time).
#
# A maximum of the 1000 most recently used file descriptors can be cached at any time.
#
# Production servers with stable file collections will definitely want to enable the cache.
open_file_cache          max=1000 inactive=3600s;
open_file_cache_valid    600s;
open_file_cache_min_uses 1;
open_file_cache_errors   on;

# Enable compression for all requests and add the 'Vary: Accept-Encoding' header.
gzip on;
gzip_min_length 1100;
gzip_buffers 4 32k;
gzip_proxied any;
gzip_types text/plain text/xml text/css application/javascript text/javascript application/json application/font-sfnt application/font-woff application/font-woff2 application/vnd.ms-fontobject image/svg+xml;
gzip_vary on;

# CSS, Javascript and fonts
location ~* \.(?:css|js|ttf|ttc|otf|eot|woff|woff2)$ {
    expires 1y;
    access_log off;
    add_header Cache-Control "public";
}

# Images
location ~* \.(?:jpg|jpeg|gif|png|ico|cur|gz|svg|svgz|mp4|ogg|ogv|webm|htc)$ {
    expires 1M;
    access_log off;
    add_header Cache-Control "public";
}
